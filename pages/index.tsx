import { useEffect, useState } from "react";
import type { NextPage } from "next";
import Head from "next/head";
 
import { ethers } from "ethers";
import { ConnectButton } from "@rainbow-me/rainbowkit";
 
import styles from "../styles/Home.module.css";
import Kittycoin from "../contract/kittycoin.json";
import { Card } from "@mui/material";
 
const Home: NextPage = () => {
 const [provider, setProvider] = useState<any>(null);
 const [signer, setSigner] = useState<any>(null);
 const [balance, setBalance] = useState<string>("0");
 const [account, setAccount] = useState<string | null>(null);
 const [kittycoin, setKittycoin] = useState<any>(null);
 const [balanceKCN, setBalanceKCN] = useState<string>("0");
 
 const kittycoinAddress = "0xe862e1A6Dd754BB6dB8737849E0c84FAdb87D839";
 
 useEffect(() => {
 if (window.ethereum) {
 console.log("MetaMask is installed!");
 const provider = new ethers.providers.Web3Provider(window.ethereum);
 setProvider(provider);
 const signer = provider.getSigner();
 setSigner(signer);
 } else {
 console.log("Please install MetaMask!");
 }
 }, []);
 
 useEffect(() => {
 if (signer) {
 signer.getAddress().then((address: string) => setAccount(address));
 }
 }, [signer]);
 
 useEffect(() => {
 if (provider && account) {
 provider.getBalance(account).then((balance) => {
 setBalance(ethers.utils.formatEther(balance));
 });
 }
 }, [provider, account]);
 
 useEffect(() => {
 if (provider && account) {
 const contract = new ethers.Contract(kittycoinAddress, Kittycoin, provider);
 setKittycoin(contract);
 
 contract.balanceOf(account).then((balance: ethers.BigNumber) => {
 setBalanceKCN(ethers.utils.formatEther(balance));
 });
 }
 }, [provider, account]);

 const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    
    // Récupérez les champs de saisie à partir de l'objet form
    const form = event.target as HTMLFormElement;
    const toAddress = form.elements.namedItem("to") as HTMLInputElement;
    const amountToSend = form.elements.namedItem("amount") as HTMLInputElement;
    
    if (kittycoin && signer) {
      const kittycoinWithSigner = kittycoin.connect(signer);
      const amount = ethers.utils.parseEther(amountToSend.value);
      try {
        const tx = await kittycoinWithSigner.transfer(toAddress.value, amount);
        await tx.wait();
        alert("Transfer successful!");
      } catch (error) {
        console.error(error);
        alert("Transfer failed!");
      }
    }
  };
 
 return (
 <div className={styles.container}>
 <Head>
 <title>Kitty Coin</title>
 <meta
 content="Generated by @rainbow-me/create-rainbowkit"
 name="description"
 />
 <link href="/favicon.ico" rel="icon" />
 </Head>
 
 <main className={styles.main}>
    <Card className={styles.card}>
      <h2>Kitty Coin</h2>
      <ConnectButton /> 
      <p>Address: {account}</p>
      <p>Amount: {balance}</p>
      <p>Balance Kittycoin: {balanceKCN} KCN</p>

      <form onSubmit={onSubmit}>
      <label htmlFor="to">Recipient</label>
      <input name="to" type="text" />
      
      <label htmlFor="amount">Amount</label>
      <input name="amount" type="number" />
      
      <button type="submit">Send</button>
      </form>
    </Card>
 </main>
 </div>
 );
};
 
export default Home;